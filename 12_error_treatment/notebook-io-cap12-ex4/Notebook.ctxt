#BlueJ class context
comment0.target=Notebook
comment1.params=
comment1.target=Notebook()
comment1.text=\r\n\ Perform\ any\ initialization\ that\ is\ required\ for\ the\ notebook.\r\n
comment2.params=note
comment2.target=void\ storeNote(java.lang.String)
comment2.text=\r\n\ Store\ a\ new\ note\ into\ the\ notebook.\r\n\ @param\ note\ The\ note\ to\ be\ stored.\r\n
comment3.params=
comment3.target=int\ numberOfNotes()
comment3.text=\r\n\ @return\ The\ number\ of\ notes\ currently\ in\ the\ notebook.\r\n
comment4.params=noteNumber
comment4.target=void\ removeNote(int)
comment4.text=\r\n\ Remove\ a\ note\ from\ the\ notebook\ if\ it\ exists.\r\n\ @param\ noteNumber\ The\ number\ of\ the\ note\ to\ be\ removed.\r\n
comment5.params=
comment5.target=void\ listNotes()
comment5.text=\r\n\ List\ all\ notes\ in\ the\ notebook.\r\n
comment6.params=filename
comment6.target=void\ serialize(java.lang.String)
comment6.text=\r\n\ Serialize\ the\ ArrayList\ of\ notes\ and\ save\ it\ to\ a\ file.\r\n\ @param\ fileName\ The\ name\ of\ the\ file\ to\ save\ the\ serialized\ data.\r\n
comment7.params=filename
comment7.target=void\ deserialize(java.lang.String)
comment7.text=\r\n\ Deserialize\ the\ ArrayList\ of\ notes\ from\ a\ file\ and\ reload\ it\ into\ notes.\r\n\ @param\ fileName\ The\ name\ of\ the\ file\ containing\ the\ serialized\ data.\r\n
numComments=8
